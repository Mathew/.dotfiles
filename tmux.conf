run-shell "powerline-daemon -q"
source "/Library/Python/2.7/site-packages/powerline/bindings/tmux/powerline.conf"

set -g base-index 1
set -g pane-base-index 1
set -g mouse on
set-window-option -g window-status-fg colour249
set-window-option -g window-status-activity-attr none
set-window-option -g window-status-bell-attr none
set-window-option -g window-status-activity-fg yellow
set-window-option -g window-status-bell-fg red
# vim: ft=tmux

set -g prefix C-a
unbind C-b
bind C-a send-prefix
bind a send-prefix

set -sg escape-time 1

# bind r source-file ~/.tmux.conf

bind | split-window -h
bind - split-window -v
bind _ split-window -v -p 10 -c '#{pane_current_path}'

set -g default-terminal "screen-256color"

setw -g aggressive-resize on

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# # Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#
# # Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

